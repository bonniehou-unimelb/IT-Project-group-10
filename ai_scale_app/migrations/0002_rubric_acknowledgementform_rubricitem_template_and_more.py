# Generated by Django 5.2.5 on 2025-09-02 03:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("ai_scale_app", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Rubric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120)),
                ("description", models.TextField(blank=True, null=True)),
                ("scope", models.CharField(blank=True, max_length=120, null=True)),
                ("creationDate", models.DateTimeField(auto_now_add=True)),
                (
                    "ownerId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AcknowledgementForm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120)),
                (
                    "rubricId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.rubric",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RubricItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task", models.TextField()),
                (
                    "aiUseScaleLevel",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("instructionsToStudents", models.TextField(blank=True, null=True)),
                ("examples", models.TextField(blank=True, null=True)),
                ("aiGeneratedContent", models.TextField(blank=True, null=True)),
                ("useAcknowledgement", models.BooleanField(default=False)),
                (
                    "rubricId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.rubric",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120)),
                ("scope", models.CharField(blank=True, max_length=120, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "ownerId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TemplateItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task", models.TextField()),
                (
                    "aiUseScaleLevel",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("instructionsToStudents", models.TextField(blank=True, null=True)),
                ("examples", models.TextField(blank=True, null=True)),
                ("aiGeneratedContent", models.TextField(blank=True, null=True)),
                ("useAcknowledgement", models.BooleanField(default=False)),
                (
                    "templateId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.template",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TemplateOwnership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ownerId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.user",
                    ),
                ),
                (
                    "templateId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.template",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AcknowledgementFormItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("aiToolsUsed", models.TextField(blank=True, null=True)),
                ("purposeUsage", models.TextField(blank=True, null=True)),
                ("keyPromptsUsed", models.TextField(blank=True, null=True)),
                (
                    "ackFormId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.acknowledgementform",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["ackFormId"], name="ai_scale_ap_ackForm_00ee28_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Enrolment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "studentId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.user",
                    ),
                ),
                (
                    "subjectId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_scale_app.subject",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["subjectId"], name="ai_scale_ap_subject_3db4f5_idx"
                    ),
                    models.Index(
                        fields=["studentId"], name="ai_scale_ap_student_c6c36c_idx"
                    ),
                ],
                "unique_together": {("subjectId", "studentId")},
            },
        ),
        migrations.AddIndex(
            model_name="rubric",
            index=models.Index(
                fields=["ownerId", "name"], name="ai_scale_ap_ownerId_5bc16b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rubric",
            unique_together={("ownerId", "name")},
        ),
        migrations.AddIndex(
            model_name="acknowledgementform",
            index=models.Index(
                fields=["rubricId", "name"], name="ai_scale_ap_rubricI_e595ad_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="acknowledgementform",
            unique_together={("rubricId", "name")},
        ),
        migrations.AddIndex(
            model_name="rubricitem",
            index=models.Index(
                fields=["rubricId"], name="ai_scale_ap_rubricI_5119c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="template",
            index=models.Index(
                fields=["ownerId", "name"], name="ai_scale_ap_ownerId_259327_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="template",
            unique_together={("ownerId", "name")},
        ),
        migrations.AddIndex(
            model_name="templateitem",
            index=models.Index(
                fields=["templateId"], name="ai_scale_ap_templat_eb5a5e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="templateownership",
            index=models.Index(
                fields=["ownerId"], name="ai_scale_ap_ownerId_a8e2fa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="templateownership",
            index=models.Index(
                fields=["templateId"], name="ai_scale_ap_templat_7c5a83_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="templateownership",
            unique_together={("templateId", "ownerId")},
        ),
    ]
